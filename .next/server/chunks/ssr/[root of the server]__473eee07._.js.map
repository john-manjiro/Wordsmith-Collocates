{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/ai-instance.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  promptDir: './prompts',\n  plugins: [\n    googleAI({\n      apiKey: process.env.GOOGLE_GENAI_API_KEY,\n    }),\n  ],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,WAAW;IACX,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,QAAQ,QAAQ,GAAG,CAAC,oBAAoB;QAC1C;KACD;IACD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-collocations.ts"],"sourcesContent":["// analyze-collocations.ts\n'use server';\n\n/**\n * @fileOverview Analyzes user input to find relevant and statistically significant collocations.\n *\n * - analyzeCollocations - A function that handles the collocation analysis process.\n * - AnalyzeCollocationsInput - The input type for the analyzeCollocations function.\n * - AnalyzeCollocationsOutput - The return type for the analyzeCollocations function.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst AnalyzeCollocationsInputSchema = z.object({\n  word: z.string().describe('The word to find collocations for.'),\n});\nexport type AnalyzeCollocationsInput = z.infer<typeof AnalyzeCollocationsInputSchema>;\n\nconst AnalyzeCollocationsOutputSchema = z.object({\n  collocations: z.array(\n    z.object({\n      collocate: z.string().describe('The collocate.'),\n      frequency: z.number().describe('The frequency of the collocate with the input word.'),\n      exampleSentences: z.array(z.string()).describe('Example sentences using the collocate with the input word.'),\n    })\n  ).describe('The statistically significant and contextually relevant collocations for the input word.'),\n});\nexport type AnalyzeCollocationsOutput = z.infer<typeof AnalyzeCollocationsOutputSchema>;\n\nexport async function analyzeCollocations(input: AnalyzeCollocationsInput): Promise<AnalyzeCollocationsOutput> {\n  return analyzeCollocationsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeCollocationsPrompt',\n  input: {\n    schema: z.object({\n      word: z.string().describe('The word to find collocations for.'),\n    }),\n  },\n  output: {\n    schema: z.object({\n      collocations: z.array(\n        z.object({\n          collocate: z.string().describe('The collocate.'),\n          frequency: z.number().describe('The frequency of the collocate with the input word.'),\n          exampleSentences: z.array(z.string()).describe('Example sentences using the collocate with the input word.'),\n        })\n      ).describe('The statistically significant and contextually relevant collocations for the input word.'),\n    }),\n  },\n  prompt: `You are a linguistic expert. Find statistically significant and contextually relevant collocations for the word: {{{word}}}. Return an array of JSON objects. Each object should have the following properties:\n\n- collocate: The collocate.\n- frequency: The frequency of the collocate with the input word.\n- exampleSentences: Example sentences using the collocate with the input word.\n\nMake sure that the example sentences clearly show how the words are used together.\n`,\n});\n\nconst analyzeCollocationsFlow = ai.defineFlow<\n  typeof AnalyzeCollocationsInputSchema,\n  typeof AnalyzeCollocationsOutputSchema\n>({\n  name: 'analyzeCollocationsFlow',\n  inputSchema: AnalyzeCollocationsInputSchema,\n  outputSchema: AnalyzeCollocationsOutputSchema,\n}, async input => {\n  const {output} = await prompt(input);\n  return output!;\n});\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAG1B;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC5B;AAGA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CACnB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC/B,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACjD,IACA,QAAQ,CAAC;AACb;AAGO,eAAe,uCAAiB,GAAjB,oBAAoB,KAA+B;IACvE,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,2HAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC5B;IACF;IACA,QAAQ;QACN,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CACnB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;gBACP,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC/B,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;YACjD,IACA,QAAQ,CAAC;QACb;IACF;IACA,QAAQ,CAAC;;;;;;;AAOX,CAAC;AACD;AAEA,MAAM,0BAA0B,2HAAA,CAAA,KAAE,CAAC,UAAU,CAG3C;IACA,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GAAG,OAAM;IACP,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA1CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}
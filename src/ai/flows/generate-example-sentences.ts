// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates example sentences for given collocations.
 *
 * - generateExampleSentences - A function that generates example sentences for collocations.
 * - GenerateExampleSentencesInput - The input type for the generateExampleSentences function.
 * - GenerateExampleSentencesOutput - The return type for the generateExampleSentences function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateExampleSentencesInputSchema = z.object({
  word: z.string().describe('The word to generate example sentences for.'),
  collocations: z.array(z.string()).describe('The collocations to use in the example sentences.'),
});
export type GenerateExampleSentencesInput = z.infer<
  typeof GenerateExampleSentencesInputSchema
>;

const GenerateExampleSentencesOutputSchema = z.object({
  sentences: z
    .array(z.string())
    .describe('The generated example sentences for each collocation.'),
});
export type GenerateExampleSentencesOutput = z.infer<
  typeof GenerateExampleSentencesOutputSchema
>;

export async function generateExampleSentences(
  input: GenerateExampleSentencesInput
): Promise<GenerateExampleSentencesOutput> {
  return generateExampleSentencesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateExampleSentencesPrompt',
  input: {
    schema: z.object({
      word: z.string().describe('The word to generate example sentences for.'),
      collocations: z
        .array(z.string())
        .describe('The collocations to use in the example sentences.'),
    }),
  },
  output: {
    schema: z.object({
      sentences: z
        .array(z.string())
        .describe('The generated example sentences for each collocation.'),
    }),
  },
  prompt: `You are an expert linguist. Generate example sentences for the following collocations of the word '{{word}}'.

Collocations:
{{#each collocations}}
- {{{this}}}
{{/each}}

Sentences:
`,
});

const generateExampleSentencesFlow = ai.defineFlow<
  typeof GenerateExampleSentencesInputSchema,
  typeof GenerateExampleSentencesOutputSchema
>(
  {
    name: 'generateExampleSentencesFlow',
    inputSchema: GenerateExampleSentencesInputSchema,
    outputSchema: GenerateExampleSentencesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
